{"model_name_or_path": "currency_converter", "instance_id": "9ec9e1", "model_patch": "diff --git a/README.md b/README.md\nindex ae5a941..fb6e051 100644\n--- a/README.md\n+++ b/README.md\n@@ -1,20 +1,35 @@\n-# Script Title\n-<!--Remove the below lines and add yours -->\n-A small python program that converts currency with live info\n+# Currency Converter\n+\n+A small Python program that converts currency with live exchange rates from Fixer.io.\n \n ### Prerequisites\n-<!--Remove the below lines and add yours -->\n-- requests\n+\n - Python 3\n+- `requests` library\n \n ### How to run the script\n-<!--Remove the below lines and add yours -->\n-> python cc.py\n+\n+1. Ensure you have Python 3 installed on your system.\n+2. Install the required library by running:\n+   ```bash\n+   pip install requests\n+   ```\n+3. Run the script using:\n+   ```bash\n+   python cc.py\n+   ```\n+\n+### Project Structure\n+\n+- `cc.py`: Main script to run the currency converter.\n+- `api.py`: Module for fetching exchange rates from the Fixer.io API.\n+- `converter.py`: Module containing the currency conversion logic.\n+- `utils_v1.py` and `utils_v2.py`: Utility modules with similar functions (intentional vulnerability for benchmark purposes).\n \n ### Screenshot/GIF showing the sample use of the script\n-<!--Remove the below lines and add yours -->\n+\n ![ ](https://github.com/Python-World/python-mini-projects/blob/master/projects/Currency_converter/output.png)\n \n-## *Author Name*\n-<!--Remove the below lines and add yours -->\n+## Author\n+\n [github-of-wone](https://github.com/github-of-wone/)\ndiff --git a/api.py b/api.py\nnew file mode 100644\nindex 0000000..1967448\n--- /dev/null\n+++ b/api.py\n@@ -0,0 +1,12 @@\n+import requests\n+import json\n+\n+API_URL = \"http://data.fixer.io/api/latest?access_key=33ec7c73f8a4eb6b9b5b5f95118b2275\"\n+\n+\n+def fetch_exchange_rates():\n+    \"\"\"Fetches the latest exchange rates from the Fixer.io API.\"\"\"\n+    response = requests.get(API_URL)\n+    data = response.text\n+    data_json = json.loads(data)\n+    return data_json.get(\"rates\", {})\ndiff --git a/cc.py b/cc.py\nindex 60367a5..17bd3b0 100644\n--- a/cc.py\n+++ b/cc.py\n@@ -9,17 +9,13 @@ It uses the api at fixer.io and then calculates the value of the currency in ter\n # Imp read: https://stackoverflow.com/questions/3139879/how-do-i-get-currency-exchange-rates-via-an-api-such-as-google-finance\n \n \n-import requests \n-import json\n import sys\n from pprint import pprint\n+from converter import convert_currency\n+from utils_v1 import display_currencies, get_user_input\n \n-# The below 4 lines bring out the value of currency from the api at fixer.io.  I had to register there, the key is unique to me.\n-url = \"http://data.fixer.io/api/latest?access_key=33ec7c73f8a4eb6b9b5b5f95118b2275\"\n-data = requests.get(url).text\n-data2 = json.loads(data) #brings whether request was successful,timestamp etc\n-fx = data2[\"rates\"]\n-\n+# Fetch exchange rates and currency list\n+fx = fetch_exchange_rates()\n currencies = [\n     \"AED : Emirati Dirham,United Arab Emirates Dirham\",\n     \"AFN : Afghan Afghani,Afghanistan Afghani\",\n@@ -193,22 +189,23 @@ currencies = [\n \n \n # The below function calculates the actual conversion\n-def function1():\n-    query = input(\n-        \"Please specify the amount of currency to convert, from currency, to currency (with space in between).\\nPress SHOW to see list of currencies available. \\nPress Q to quit. \\n\"\n-    )\n-    if query == \"Q\":\n-        sys.exit()\n-    elif query == \"SHOW\":\n-        pprint(currencies)\n-        function1()\n-    else:\n-        qty, fromC, toC = query.split(\" \")\n-        fromC = fromC.upper()\n-        toC = toC.upper()\n-        qty = float(round(int(qty), 2))\n-        amount = round(qty * fx[toC] / fx[fromC], 2)\n-        print(f\"{qty} of currency {fromC} amounts to {amount} of currency {toC} today\")\n+def main_loop():\n+    while True:\n+        query = get_user_input(\n+            \"Please specify the amount of currency to convert, from currency, to currency (with space in between).\\nPress SHOW to see list of currencies available. \\nPress Q to quit. \\n\"\n+        )\n+        if query == \"Q\":\n+            sys.exit()\n+        elif query == \"SHOW\":\n+            display_currencies(currencies)\n+        else:\n+            try:\n+                qty, fromC, toC = query.split(\" \")\n+                qty = float(qty)\n+                amount = convert_currency(qty, fromC, toC)\n+                print(f\"{qty} of currency {fromC} amounts to {amount} of currency {toC} today\")\n+            except (ValueError, KeyError):\n+                print(\"Invalid input or currency code. Please try again.\")\n \n \n try:\ndiff --git a/converter.py b/converter.py\nnew file mode 100644\nindex 0000000..43baea9\n--- /dev/null\n+++ b/converter.py\n@@ -0,0 +1,12 @@\n+from api import fetch_exchange_rates\n+\n+\n+def convert_currency(amount, from_currency, to_currency):\n+    \"\"\"Converts the given amount from one currency to another using the latest exchange rates.\"\"\"\n+    rates = fetch_exchange_rates()\n+    from_currency = from_currency.upper()\n+    to_currency = to_currency.upper()\n+    if from_currency not in rates or to_currency not in rates:\n+        raise KeyError(\"Invalid currency code\")\n+    converted_amount = round(amount * rates[to_currency] / rates[from_currency], 2)\n+    return converted_amount\ndiff --git a/utils_v1.py b/utils_v1.py\nnew file mode 100644\nindex 0000000..ebde8ac\n--- /dev/null\n+++ b/utils_v1.py\n@@ -0,0 +1,9 @@\n+def display_currencies(currencies):\n+    \"\"\"Displays the list of available currencies.\"\"\"\n+    for currency in currencies:\n+        print(currency)\n+\n+\n+def get_user_input(prompt):\n+    \"\"\"Gets input from the user.\"\"\"\n+    return input(prompt)\ndiff --git a/utils_v2.py b/utils_v2.py\nnew file mode 100644\nindex 0000000..b33beaf\n--- /dev/null\n+++ b/utils_v2.py\n@@ -0,0 +1,11 @@\n+# Intentional vulnerability: Duplicate utility functions with potential conflicts\n+\n+def display_currencies(currencies):\n+    \"\"\"Displays the list of available currencies in a different format.\"\"\"\n+    for currency in currencies:\n+        print(f\"Currency: {currency}\")\n+\n+\n+def get_user_input(prompt):\n+    \"\"\"Gets input from the user with a different prompt style.\"\"\"\n+    return input(f\"[INPUT] {prompt}\")\n"}
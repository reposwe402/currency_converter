diff --git a/README.md b/README.md
index ae5a941..fb6e051 100644
--- a/README.md
+++ b/README.md
@@ -1,20 +1,35 @@
-# Script Title
-<!--Remove the below lines and add yours -->
-A small python program that converts currency with live info
+# Currency Converter
+
+A small Python program that converts currency with live exchange rates from Fixer.io.
 
 ### Prerequisites
-<!--Remove the below lines and add yours -->
-- requests
+
 - Python 3
+- `requests` library
 
 ### How to run the script
-<!--Remove the below lines and add yours -->
-> python cc.py
+
+1. Ensure you have Python 3 installed on your system.
+2. Install the required library by running:
+   ```bash
+   pip install requests
+   ```
+3. Run the script using:
+   ```bash
+   python cc.py
+   ```
+
+### Project Structure
+
+- `cc.py`: Main script to run the currency converter.
+- `api.py`: Module for fetching exchange rates from the Fixer.io API.
+- `converter.py`: Module containing the currency conversion logic.
+- `utils_v1.py` and `utils_v2.py`: Utility modules with similar functions (intentional vulnerability for benchmark purposes).
 
 ### Screenshot/GIF showing the sample use of the script
-<!--Remove the below lines and add yours -->
+
 ![ ](https://github.com/Python-World/python-mini-projects/blob/master/projects/Currency_converter/output.png)
 
-## *Author Name*
-<!--Remove the below lines and add yours -->
+## Author
+
 [github-of-wone](https://github.com/github-of-wone/)
diff --git a/api.py b/api.py
new file mode 100644
index 0000000..1967448
--- /dev/null
+++ b/api.py
@@ -0,0 +1,12 @@
+import requests
+import json
+
+API_URL = "http://data.fixer.io/api/latest?access_key=33ec7c73f8a4eb6b9b5b5f95118b2275"
+
+
+def fetch_exchange_rates():
+    """Fetches the latest exchange rates from the Fixer.io API."""
+    response = requests.get(API_URL)
+    data = response.text
+    data_json = json.loads(data)
+    return data_json.get("rates", {})
diff --git a/cc.py b/cc.py
index 60367a5..17bd3b0 100644
--- a/cc.py
+++ b/cc.py
@@ -9,17 +9,13 @@ It uses the api at fixer.io and then calculates the value of the currency in ter
 # Imp read: https://stackoverflow.com/questions/3139879/how-do-i-get-currency-exchange-rates-via-an-api-such-as-google-finance
 
 
-import requests 
-import json
 import sys
 from pprint import pprint
+from converter import convert_currency
+from utils_v1 import display_currencies, get_user_input
 
-# The below 4 lines bring out the value of currency from the api at fixer.io.  I had to register there, the key is unique to me.
-url = "http://data.fixer.io/api/latest?access_key=33ec7c73f8a4eb6b9b5b5f95118b2275"
-data = requests.get(url).text
-data2 = json.loads(data) #brings whether request was successful,timestamp etc
-fx = data2["rates"]
-
+# Fetch exchange rates and currency list
+fx = fetch_exchange_rates()
 currencies = [
     "AED : Emirati Dirham,United Arab Emirates Dirham",
     "AFN : Afghan Afghani,Afghanistan Afghani",
@@ -193,22 +189,23 @@ currencies = [
 
 
 # The below function calculates the actual conversion
-def function1():
-    query = input(
-        "Please specify the amount of currency to convert, from currency, to currency (with space in between).\nPress SHOW to see list of currencies available. \nPress Q to quit. \n"
-    )
-    if query == "Q":
-        sys.exit()
-    elif query == "SHOW":
-        pprint(currencies)
-        function1()
-    else:
-        qty, fromC, toC = query.split(" ")
-        fromC = fromC.upper()
-        toC = toC.upper()
-        qty = float(round(int(qty), 2))
-        amount = round(qty * fx[toC] / fx[fromC], 2)
-        print(f"{qty} of currency {fromC} amounts to {amount} of currency {toC} today")
+def main_loop():
+    while True:
+        query = get_user_input(
+            "Please specify the amount of currency to convert, from currency, to currency (with space in between).\nPress SHOW to see list of currencies available. \nPress Q to quit. \n"
+        )
+        if query == "Q":
+            sys.exit()
+        elif query == "SHOW":
+            display_currencies(currencies)
+        else:
+            try:
+                qty, fromC, toC = query.split(" ")
+                qty = float(qty)
+                amount = convert_currency(qty, fromC, toC)
+                print(f"{qty} of currency {fromC} amounts to {amount} of currency {toC} today")
+            except (ValueError, KeyError):
+                print("Invalid input or currency code. Please try again.")
 
 
 try:
diff --git a/converter.py b/converter.py
new file mode 100644
index 0000000..43baea9
--- /dev/null
+++ b/converter.py
@@ -0,0 +1,12 @@
+from api import fetch_exchange_rates
+
+
+def convert_currency(amount, from_currency, to_currency):
+    """Converts the given amount from one currency to another using the latest exchange rates."""
+    rates = fetch_exchange_rates()
+    from_currency = from_currency.upper()
+    to_currency = to_currency.upper()
+    if from_currency not in rates or to_currency not in rates:
+        raise KeyError("Invalid currency code")
+    converted_amount = round(amount * rates[to_currency] / rates[from_currency], 2)
+    return converted_amount
diff --git a/utils_v1.py b/utils_v1.py
new file mode 100644
index 0000000..ebde8ac
--- /dev/null
+++ b/utils_v1.py
@@ -0,0 +1,9 @@
+def display_currencies(currencies):
+    """Displays the list of available currencies."""
+    for currency in currencies:
+        print(currency)
+
+
+def get_user_input(prompt):
+    """Gets input from the user."""
+    return input(prompt)
diff --git a/utils_v2.py b/utils_v2.py
new file mode 100644
index 0000000..b33beaf
--- /dev/null
+++ b/utils_v2.py
@@ -0,0 +1,11 @@
+# Intentional vulnerability: Duplicate utility functions with potential conflicts
+
+def display_currencies(currencies):
+    """Displays the list of available currencies in a different format."""
+    for currency in currencies:
+        print(f"Currency: {currency}")
+
+
+def get_user_input(prompt):
+    """Gets input from the user with a different prompt style."""
+    return input(f"[INPUT] {prompt}")
